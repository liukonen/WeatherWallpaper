<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio\2022\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="17.0">
 <Namespaces>
  <Namespace Name="WeatherDesktop.Interface">
   <Messages>
    <Message Id="Interface" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Rename namespace WeatherDesktop.Interface so that it no longer conflicts with the reserved language keyword 'Interface'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WeatherDesktop.Share">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WeatherDesktop.Share' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\bin\Debug\WeatherDesktop.Shared.dll">
   <Modules>
    <Module Name="weatherdesktop.shared.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'WeatherDesktop.Shared.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'WeatherDesktop.Shared.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="WeatherDesktop.Interface">
       <Types>
        <Type Name="ILatLongInterface" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Lat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lat' in type name 'ILatLongInterface'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#worked()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="worked" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'worked' in member name 'ILatLongInterface.worked()' by changing it to 'Worked'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ISharedResponse" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'ISharedResponse'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IsharedSunRiseSetInterface" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'IsharedSunRiseSetInterface'.</Issue>
          </Message>
          <Message Id="SunRise" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SunRise' in type name 'IsharedSunRiseSetInterface' exists as a discrete term. If your usage is intended to be single word, case it as 'Sunrise'.</Issue>
          </Message>
          <Message Id="Ishared" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ishared' in type name 'IsharedSunRiseSetInterface'.</Issue>
          </Message>
          <Message Id="I" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="Interface" Certainty="95" Level="Error">Prefix interface name 'IsharedSunRiseSetInterface' with 'I'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ISharedWeatherinterface" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'ISharedWeatherinterface'.</Issue>
          </Message>
          <Message Id="Weatherinterface" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Weatherinterface' in type name 'ISharedWeatherinterface'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SunRiseSetResponse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="SunRise" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SunRise' in type name 'SunRiseSetResponse' exists as a discrete term. If your usage is intended to be single word, case it as 'Sunrise'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SolarNoon" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SunRiseSetResponse.SolarNoon' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Status" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SunRiseSetResponse.Status' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SunRise" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SunRise" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SunRise' in member name 'SunRiseSetResponse.SunRise' exists as a discrete term. If your usage is intended to be single word, case it as 'Sunrise' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SunRiseSetResponse.SunRise' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SunSet" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SunSet" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SunSet' in member name 'SunRiseSetResponse.SunSet' exists as a discrete term. If your usage is intended to be single word, case it as 'Sunset' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SunRiseSetResponse.SunSet' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WeatherResponse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ForcastDescription" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WeatherResponse.ForcastDescription' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Forcast" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Forcast' in member name 'WeatherResponse.ForcastDescription' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Temp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WeatherResponse.Temp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WeatherResponse.WType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WeatherDesktop.Share">
       <Types>
        <Type Name="ErrorHandler" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AbsouluteException(System.Exception)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="ErrorHandler.cs" Line="15">'ErrorHandler.AbsouluteException(Exception)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="sEvent" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="ErrorHandler.cs" Line="22">'ErrorHandler.AbsouluteException(Exception)' declares a variable, 'sEvent', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogException(System.Exception)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="sEvent" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="ErrorHandler.cs" Line="41">'ErrorHandler.LogException(Exception)' declares a variable, 'sEvent', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedObjects" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BetweenTimespans(System.TimeSpan,System.TimeSpan,System.TimeSpan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Highervalue" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="259">In member 'SharedObjects.BetweenTimespans(TimeSpan, TimeSpan, TimeSpan)', correct the casing of 'Highervalue' in parameter name 'Highervalue' by changing it to 'highervalue'.</Issue>
            </Message>
            <Message Id="Lower" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="259">In member 'SharedObjects.BetweenTimespans(TimeSpan, TimeSpan, TimeSpan)', correct the casing of 'Lower' in parameter name 'LowerValue' by changing it to 'lower'.</Issue>
            </Message>
            <Message Id="Highervalue" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="259">In method 'SharedObjects.BetweenTimespans(TimeSpan, TimeSpan, TimeSpan)', correct the spelling of 'Highervalue' in parameter name 'Highervalue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompileDebug(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Items" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="262">In member 'SharedObjects.CompileDebug(Dictionary&lt;string, string&gt;)', correct the casing of 'Items' in parameter name 'ItemsTodisplay' by changing it to 'items'.</Issue>
            </Message>
            <Message Id="Todisplay" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="262">In method 'SharedObjects.CompileDebug(Dictionary&lt;string, string&gt;)', correct the spelling of 'Todisplay' in parameter name 'ItemsTodisplay' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="265">In externally visible method 'SharedObjects.CompileDebug(Dictionary&lt;string, string&gt;)', validate parameter 'ItemsTodisplay' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompressedCallSite(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Url" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="237">In member 'SharedObjects.CompressedCallSite(string)', correct the casing of 'Url' in parameter name 'Url' by changing it to 'url'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="237">Change the type of parameter 'Url' of method 'SharedObjects.CompressedCallSite(string)' from string to System.Uri, or provide an overload of 'SharedObjects.CompressedCallSite(string)', that allows 'Url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompressedCallSite(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Url" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="242">In member 'SharedObjects.CompressedCallSite(string, string)', correct the casing of 'Url' in parameter name 'Url' by changing it to 'url'.</Issue>
            </Message>
            <Message Id="User" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="242">In member 'SharedObjects.CompressedCallSite(string, string)', correct the casing of 'User' in parameter name 'UserAgent' by changing it to 'user'.</Issue>
            </Message>
            <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="242">Modify 'SharedObjects.CompressedCallSite(string, string)' to call 'WebRequest.Create(Uri)' instead of 'WebRequest.Create(string)'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="242">Change the type of parameter 'Url' of method 'SharedObjects.CompressedCallSite(string, string)' from string to System.Uri, or provide an overload of 'SharedObjects.CompressedCallSite(string, string)', that allows 'Url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertBitarrayToInt(System.Collections.BitArray)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Array" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="279">In member 'SharedObjects.ConvertBitarrayToInt(BitArray)', correct the casing of 'Array' in parameter name 'Array' by changing it to 'array'.</Issue>
            </Message>
            <Message Id="Bitarray" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="279">Correct the spelling of 'Bitarray' in member name 'SharedObjects.ConvertBitarrayToInt(BitArray)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="279">Consider replacing the language-specific data type identifier 'Int' in member name 'SharedObjects.ConvertBitarrayToInt(BitArray)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="281">In externally visible method 'SharedObjects.ConvertBitarrayToInt(BitArray)', validate parameter 'Array' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConverTIntToBitArray(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TInt" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="286">The compound word 'TInt' in member name 'SharedObjects.ConverTIntToBitArray(int)' exists as a discrete term. If your usage is intended to be single word, case it as 'Tint' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Conver" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="286">Correct the spelling of 'Conver' in member name 'SharedObjects.ConverTIntToBitArray(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InputBox(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prompt" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="17">In member 'SharedObjects.InputBox(string)', correct the casing of 'Prompt' in parameter name 'Prompt' by changing it to 'prompt'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InputBox(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prompt" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="18">In member 'SharedObjects.InputBox(string, string)', correct the casing of 'Prompt' in parameter name 'Prompt' by changing it to 'prompt'.</Issue>
            </Message>
            <Message Id="Title" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="18">In member 'SharedObjects.InputBox(string, string)', correct the casing of 'Title' in parameter name 'Title' by changing it to 'title'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InputBox(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="19">In member 'SharedObjects.InputBox(string, string, string)', correct the casing of 'Default' in parameter name 'DefaultResponse' by changing it to 'default'.</Issue>
            </Message>
            <Message Id="Prompt" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="19">In member 'SharedObjects.InputBox(string, string, string)', correct the casing of 'Prompt' in parameter name 'Prompt' by changing it to 'prompt'.</Issue>
            </Message>
            <Message Id="Title" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="19">In member 'SharedObjects.InputBox(string, string, string)', correct the casing of 'Title' in parameter name 'Title' by changing it to 'title'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedObjects+AppSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SharedObjects.AppSettings'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddUpdateAppSettings(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="98">Method 'SharedObjects.AppSettings.AddUpdateAppSettings(string, string)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Error Editing Config".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="98">Method 'SharedObjects.AppSettings.AddUpdateAppSettings(string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Error writing app settings".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="98">Change 'SharedObjects.AppSettings.AddUpdateAppSettings(string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddupdateAppSettingsEncrypted(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="139">Method 'SharedObjects.AppSettings.AddupdateAppSettingsEncrypted(string, string)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string)'. Retrieve the following string(s) from a resource table instead: "error writing to Config file".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="138">Modify 'SharedObjects.AppSettings.AddupdateAppSettingsEncrypted(string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Addupdate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="131">Correct the spelling of 'Addupdate' in member name 'SharedObjects.AppSettings.AddupdateAppSettingsEncrypted(string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="139">Change 'SharedObjects.AppSettings.AddupdateAppSettingsEncrypted(string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadSetting(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="122">Change 'SharedObjects.AppSettings.ReadSetting(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadSettingEncrypted(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="153">Modify 'SharedObjects.AppSettings.ReadSettingEncrypted(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedObjects+Cache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SharedObjects.Cache'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'SharedObjects.Cache' conflicts in whole or in part with the namespace name 'System.Net.Cache' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Set(System.String,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="198">In method 'SharedObjects.Cache.Set(string, object)', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Set(System.String,System.Object,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="193">In method 'SharedObjects.Cache.Set(string, object, int)', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedObjects+LatLong" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Lat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lat' in type name 'SharedObjects.LatLong'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SharedObjects.LatLong'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'SharedObjects.LatLong' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Lat" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="211">Correct the spelling of 'Lat' in member name 'SharedObjects.LatLong.Lat' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Lat()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="213">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SharedObjects.LatLong.Lat.get()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Lng" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lng" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="220">Correct the spelling of 'Lng' in member name 'SharedObjects.LatLong.Lng' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Lng()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="222">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SharedObjects.LatLong.Lng.get()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Set(System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="229">In method 'SharedObjects.LatLong.Set(double, double)', correct the spelling of 'Lat' in parameter name 'dLat' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Lng" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="229">In method 'SharedObjects.LatLong.Set(double, double)', correct the spelling of 'Lng' in parameter name 'dLng' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="229">In method 'SharedObjects.LatLong.Set(double, double)', correct the spelling of 'd' in parameter name 'dLat' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="229">In method 'SharedObjects.LatLong.Set(double, double)', correct the spelling of 'd' in parameter name 'dLng' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedObjects+WeatherTypes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'SharedObjects.WeatherTypes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ThunderStorm" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ThunderStorm" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'ThunderStorm' in member name 'SharedObjects.WeatherTypes.ThunderStorm' exists as a discrete term. If your usage is intended to be single word, case it as 'Thunderstorm' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedObjects+ZipObjects" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SharedObjects.ZipObjects'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetZip()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="50">Method 'SharedObjects.ZipObjects.GetZip()' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "error".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="50">Method 'SharedObjects.ZipObjects.GetZip()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Application needs your zip code. try again, or close".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="50">Change 'SharedObjects.ZipObjects.GetZip()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="40">Change 'SharedObjects.ZipObjects.GetZip()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rawzip" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rawzip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="64">Correct the spelling of 'Rawzip' in member name 'SharedObjects.ZipObjects.Rawzip' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ZipMenuItem" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ZipMenuItem()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-06-12 00:26:55Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\liuko\projects\git\WeatherWallpaper\WeatherDesktop.Shared\Shared" File="SharedObjects.cs" Line="27">Method 'SharedObjects.ZipObjects.ZipMenuItem.get()' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string, EventHandler)'. Retrieve the following string(s) from a resource table instead: "Change Zip Code".</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
   <Name>Avoid empty interfaces</Name>
   <Description>Interfaces are meant to contain members that specify a set of behaviors. To mark or label a class, use an attribute instead of an empty interface.</Description>
   <Resolution Name="Default">Define a custom attribute to replace {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182128.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
   <Name>Identifiers should have correct prefix</Name>
   <Description>Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</Description>
   <Resolution Name="Interface">Prefix interface name {0} with 'I'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182243.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Namespace">Rename namespace {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234">
   <Name>Pass System.Uri objects instead of strings</Name>
   <Description>If there are two overloads one taking System.Uri and one taking System.String, library code should never call the string-based overload.</Description>
   <Resolution Name="Default">Modify {0} to call {1} instead of {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182360.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
